{"version":3,"file":"ng2-nested-search-component.js","sourceRoot":"","sources":["../../src/components/ng2-nested-search-component.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AAMpD;IAAA;IAkDA,CAAC;IAjDG,8BAAS,GAAT,UAAU,KAAK,EAAE,SAAS,EAAE,cAAc;QAEtC,IAAG,CAAC,KAAK,IAAI,CAAC,SAAS,EAAE;YACrB,IAAG,cAAc;gBAAE,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;YACvD,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,IAAG,cAAc,IAAI,cAAc,CAAC,cAAc,EAAE;YAEhD,IAAI,IAAI,GAAG,KAAK,CAAC;oCACN,QAAQ;gBACf,IAAI,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;oBAC3D,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,IAAI;wBAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAA;oBACtG,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,GAAG,GAAG,IAAI,CAAC;iBACd;gBACD,IAAI,GAAG,GAAG,CAAC;YACf,CAAC;YATD,KAAK,IAAM,QAAQ,IAAI,SAAS;wBAArB,QAAQ;aASlB;YAED,cAAc,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YAClC,OAAO,GAAG,CAAC;SAEd;aAAM;oCAEQ,QAAQ;gBACf,IAAI,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACpC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI;wBAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAA;oBACtG,CAAC,CAAC,CAAC,CAAC;iBACP;YACL,CAAC;YAND,KAAK,IAAM,QAAQ,IAAI,SAAS;wBAArB,QAAQ;aAMlB;YAED,IAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,KAAK;gBACvC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,KAAK,KAAK,GAAG,CAAC,SAAS,CAAC,UAAA,GAAG;oBAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAG,cAAc;gBAAE,cAAc,CAAC,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;YAC7D,OAAO,WAAW,CAAC;SAEtB;IAEL,CAAC;IAjDQ,UAAU;QAJtB,IAAI,CAAC;YACF,IAAI,EAAG,iBAAiB;SAC3B,CAAC;OAEW,UAAU,CAkDtB;IAAD,iBAAC;CAAA,AAlDD,IAkDC;SAlDY,UAAU","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name : \"ng2NestedSearch\"\r\n})\r\n\r\nexport class FilterPipe implements PipeTransform {\r\n    transform(items, searchObj, filterMetadata): any {\r\n        \r\n        if(!items || !searchObj) {\r\n            if(filterMetadata) filterMetadata.count = items.length;\r\n            return items;\r\n        }\r\n        \r\n        let arr = [];\r\n\r\n        if(filterMetadata && filterMetadata.isNestedSearch) {\r\n\r\n            let temp = items;\r\n            for (const property in searchObj) {\r\n                if (searchObj.hasOwnProperty(property) && searchObj[property]) {\r\n                    arr = temp.filter(item => {\r\n                        return item[property].toLocaleLowerCase().includes(searchObj[property].trim().toLocaleLowerCase())\r\n                    });\r\n                } else {\r\n                    arr = temp;\r\n                }\r\n                temp = arr;\r\n            }\r\n\r\n            filterMetadata.count = arr.length;\r\n            return arr;\r\n\r\n        } else {\r\n\r\n            for (const property in searchObj) {\r\n                if (searchObj.hasOwnProperty(property)) {\r\n                    arr = arr.concat(items.filter(item => {\r\n                        return item[property].toLocaleLowerCase().includes(searchObj[property].trim().toLocaleLowerCase())\r\n                    }));\r\n                }\r\n            }\r\n\r\n            const uniqueArray = arr.filter((item, index) => {\r\n                const _item = JSON.stringify(item);\r\n                return index === arr.findIndex(obj => {\r\n                    return JSON.stringify(obj) === _item;\r\n                });\r\n            });\r\n    \r\n            if(filterMetadata) filterMetadata.count = uniqueArray.length;\r\n            return uniqueArray;\r\n\r\n        }\r\n        \r\n    }\r\n}"]}